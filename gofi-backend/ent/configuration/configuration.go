// Code generated by entc, DO NOT EDIT.

package configuration

import (
	"gofi/ent/schema"
)

const (
	// Label holds the string label denoting the configuration type in the database.
	Label = "configuration"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldVersion holds the string denoting the version vertex property in the database.
	FieldVersion = "version"
	// FieldAppPath holds the string denoting the apppath vertex property in the database.
	FieldAppPath = "app_path"
	// FieldDefStoragePath holds the string denoting the defstoragepath vertex property in the database.
	FieldDefStoragePath = "def_storage_path"
	// FieldThemeStyle holds the string denoting the themestyle vertex property in the database.
	FieldThemeStyle = "theme_style"
	// FieldThemeColor holds the string denoting the themecolor vertex property in the database.
	FieldThemeColor = "theme_color"
	// FieldNavMode holds the string denoting the navmode vertex property in the database.
	FieldNavMode = "nav_mode"
	// FieldDatabaseFilePath holds the string denoting the databasefilepath vertex property in the database.
	FieldDatabaseFilePath = "database_file_path"
	// FieldCustomStoragePath holds the string denoting the customstoragepath vertex property in the database.
	FieldCustomStoragePath = "custom_storage_path"
	// FieldLogDirectoryPath holds the string denoting the logdirectorypath vertex property in the database.
	FieldLogDirectoryPath = "log_directory_path"
	// FieldInitialized holds the string denoting the initialized vertex property in the database.
	FieldInitialized = "initialized"
	// FieldCreated holds the string denoting the created vertex property in the database.
	FieldCreated = "created"
	// FieldUpdated holds the string denoting the updated vertex property in the database.
	FieldUpdated = "updated"

	// Table holds the table name of the configuration in the database.
	Table = "configurations"
)

// Columns holds all SQL columns for configuration fields.
var Columns = []string{
	FieldID,
	FieldVersion,
	FieldAppPath,
	FieldDefStoragePath,
	FieldThemeStyle,
	FieldThemeColor,
	FieldNavMode,
	FieldDatabaseFilePath,
	FieldCustomStoragePath,
	FieldLogDirectoryPath,
	FieldInitialized,
	FieldCreated,
	FieldUpdated,
}

var (
	fields = schema.Configuration{}.Fields()

	// descThemeStyle is the schema descriptor for themeStyle field.
	descThemeStyle = fields[3].Descriptor()
	// ThemeStyleValidator is a validator for the "themeStyle" field. It is called by the builders before save.
	ThemeStyleValidator = descThemeStyle.Validators[0].(func(string) error)

	// descThemeColor is the schema descriptor for themeColor field.
	descThemeColor = fields[4].Descriptor()
	// ThemeColorValidator is a validator for the "themeColor" field. It is called by the builders before save.
	ThemeColorValidator = descThemeColor.Validators[0].(func(string) error)

	// descNavMode is the schema descriptor for navMode field.
	descNavMode = fields[5].Descriptor()
	// NavModeValidator is a validator for the "navMode" field. It is called by the builders before save.
	NavModeValidator = descNavMode.Validators[0].(func(string) error)

	// descDatabaseFilePath is the schema descriptor for databaseFilePath field.
	descDatabaseFilePath = fields[6].Descriptor()
	// DatabaseFilePathValidator is a validator for the "databaseFilePath" field. It is called by the builders before save.
	DatabaseFilePathValidator = descDatabaseFilePath.Validators[0].(func(string) error)

	// descCustomStoragePath is the schema descriptor for customStoragePath field.
	descCustomStoragePath = fields[7].Descriptor()
	// DefaultCustomStoragePath holds the default value on creation for the customStoragePath field.
	DefaultCustomStoragePath = descCustomStoragePath.Default.(string)

	// descLogDirectoryPath is the schema descriptor for logDirectoryPath field.
	descLogDirectoryPath = fields[8].Descriptor()
	// LogDirectoryPathValidator is a validator for the "logDirectoryPath" field. It is called by the builders before save.
	LogDirectoryPathValidator = descLogDirectoryPath.Validators[0].(func(string) error)

	// descInitialized is the schema descriptor for initialized field.
	descInitialized = fields[9].Descriptor()
	// DefaultInitialized holds the default value on creation for the initialized field.
	DefaultInitialized = descInitialized.Default.(bool)
)
