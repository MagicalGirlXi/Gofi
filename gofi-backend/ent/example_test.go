// Code generated by entc, DO NOT EDIT.

package ent

import (
	"context"
	"log"
	"time"

	"github.com/facebookincubator/ent/dialect/sql"
)

// dsn for the database. In order to run the tests locally, run the following command:
//
//	 ENT_INTEGRATION_ENDPOINT="root:pass@tcp(localhost:3306)/test?parseTime=True" go test -v
//
var dsn string

func ExampleConfiguration() {
	if dsn == "" {
		return
	}
	ctx := context.Background()
	drv, err := sql.Open("mysql", dsn)
	if err != nil {
		log.Fatalf("failed creating database client: %v", err)
	}
	defer drv.Close()
	client := NewClient(Driver(drv))
	// creating vertices for the configuration's edges.

	// create configuration vertex with its edges.
	c := client.Configuration.
		Create().
		SetVersion("string").
		SetAppPath("string").
		SetDefStoragePath("string").
		SetThemeStyle("string").
		SetThemeColor("string").
		SetNavMode("string").
		SetDatabaseFilePath("string").
		SetCustomStoragePath("string").
		SetLogDirectoryPath("string").
		SetInitialized(true).
		SetCreated(time.Now()).
		SetUpdated(time.Now()).
		SaveX(ctx)
	log.Println("configuration created:", c)

	// query edges.

	// Output:
}
func ExampleFile() {
	if dsn == "" {
		return
	}
	ctx := context.Background()
	drv, err := sql.Open("mysql", dsn)
	if err != nil {
		log.Fatalf("failed creating database client: %v", err)
	}
	defer drv.Close()
	client := NewClient(Driver(drv))
	// creating vertices for the file's edges.

	// create file vertex with its edges.
	f := client.File.
		Create().
		SetName("string").
		SetIsDirectory(true).
		SetSize(1).
		SetExtension("string").
		SetMime("string").
		SetPath("string").
		SetLastModified(1).
		SetContent("string").
		SaveX(ctx)
	log.Println("file created:", f)

	// query edges.

	// Output:
}
